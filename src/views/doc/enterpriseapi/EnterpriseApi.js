// Generated by XCloud DevOps for Codegen, refer: http://dts.devops.wl4g.com
import {transDate, getDay} from 'utils/'
import i18n from "../../../i18n/i18n";
import dragTreeTable from "xcloud-vue-drag-tree-table";

export default {
    name: 'enterpriseApi',
    components: {
        dragTreeTable
    },
    data() {
        return {
            //api part
            apiList: [],
            defaultProps: {
                children: 'children',
                label: 'label'
            },

            //查询条件
            searchParams: {
                apiVersion: '',
                address: '',
            },

            //分页信息
            total: 0,
            pageNum: 1,
            pageSize: 9999,

            //弹窗表单
            saveForm: {
                name: '',
                tags: '',
                apiVersion: '',
                address: '',
                protocolType: '',
                messageStruct: '',
                remark: '',
            },

            dialogVisible: false,
            dialogTitle: '',
            dialogLoading: false,

            tableData: [],

            enterpriseOas3Components: [],
            enterpriseOas3Tags: [],

            // 表单规则
            rules: {
                name: [{ required: true, message: 'name is required', trigger: 'change' }],
                address: [{ required: true, message: 'address is required', trigger: 'change' }],
                apiVersion: [{ required: true, message: 'apiVersion is required', trigger: 'change' }],
                protocolType: [{ required: true, message: 'protocolType is required', trigger: 'change' }],
            },
            loading: false,


            //right panel part
            messageStructKey: '',//Type: get|post...
            messageStructObj: {
                parameters:[//TODO
                    {
                        "name":"complete",
                        "in":"query",
                        "required":false,
                        "type":"boolean"
                    },
                    {
                        "name":"id",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "name":"identifier",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "User":{
                            "type":"object",
                            "properties":{
                                "pageNum":{
                                    "type":"integer",
                                    "format":"int32"
                                },
                                "pageSize":{
                                    "type":"integer",
                                    "format":"int32"
                                },
                                "records":{
                                    "type":"array",
                                    "readOnly":true,
                                    "items":{
                                        "$ref":"#/definitions/发布文章"
                                    }
                                },
                                "total":{
                                    "type":"integer",
                                    "format":"int64"
                                }
                            },
                        }
                    },
                ],

            },


            treeData: {
                columns: [
                    {
                        type: "checkbox",
                        isContainChildren: true,
                        width: 100,
                        align: "center",
                        onChange: (item)=>{
                            console.log(item)
                            alert('您选中了'+ item.length + '条数据');
                        }
                    },
                    {
                        type: "selection",
                        title: "<a>菜单名称</a>",
                        field: "name",
                        width: 200,
                        align: "left",
                        titleAlign: "left",
                        editable: true,
                        /*formatter: item => {
                          return "<span>" + item.name + "</span>";
                        }*/
                    },
                    {
                        title: "ID",
                        field: "id",
                        width: 100,
                        align: "center"
                    }
                ],
                lists: [
                    {
                        id: 110,
                        parent_id: 0,
                        order: 0,
                        name: "客户管理",
                        uri: "无",
                        open: true,
                        lists: [
                            {
                                id: 201,
                                parent_id: 110,
                                order: 0,
                                name: "联系人",
                                uri: "/customer/contacts",
                                lists: null,
                                isShowCheckbox: false,
                                highlight: true
                            },
                            {
                                id: 173,
                                parent_id: 110,
                                order: 1,
                                name: "客户",
                                uri: "/customer/customerList",
                                lists: null,
                                checked: true,
                            },
                            {
                                id: 117,
                                parent_id: 110,
                                order: 2,
                                name: "客户维护记录",
                                uri: "/customer/maintain",
                                lists: null
                            },
                            {
                                id: 383,
                                parent_id: 110,
                                order: 3,
                                name: "客户冲突",
                                uri: "无",
                                lists: [
                                    {
                                        id: 390,
                                        parent_id: 383,
                                        order: 0,
                                        name: "个人冲突",
                                        uri: "/customer/personalConflict",
                                        lists: null
                                    },
                                    {
                                        id: 397,
                                        parent_id: 383,
                                        order: 1,
                                        name: "团队冲突",
                                        uri: "/customer/teamConflict",
                                        lists: null
                                    },
                                    {
                                        id: 215,
                                        parent_id: 383,
                                        order: 2,
                                        name: "客户查询",
                                        uri: "/customer/inquiry",
                                        lists: null
                                    }
                                ]
                            },
                            {
                                id: 138,
                                parent_id: 110,
                                order: 4,
                                name: "线索管理",
                                uri: "/customer/clue",
                                lists: null
                            },
                            {
                                id: 159,
                                parent_id: 110,
                                order: 5,
                                name: "集团信息",
                                uri: "/customer/agent",
                                lists: null
                            }
                        ]
                    },
                    {
                        id: 404,
                        parent_id: 0,
                        order: 1,
                        name: "审核中心",
                        uri: "无",
                        lists: [
                            {
                                id: 187,
                                parent_id: 404,
                                order: 0,
                                name: "资质审核",
                                uri: "/customer/qualifications",
                                lists: null
                            }
                        ]
                    },
                    {
                        id: 306,
                        parent_id: 0,
                        order: 2,
                        name: "数据统计",
                        uri: "无",
                        lists: [
                            {
                                id: 222,
                                parent_id: 306,
                                order: 0,
                                name: "线索",
                                uri: "/customer/clueStatistics",
                                lists: null
                            },
                            {
                                id: 124,
                                parent_id: 306,
                                order: 1,
                                name: "客户",
                                uri: "/customer/statistics",
                                lists: null
                            }
                        ]
                    },
                    {
                        id: 334,
                        parent_id: 0,
                        order: 3,
                        name: "基础数据",
                        uri: "",
                        lists: [
                            {
                                id: 152,
                                parent_id: 334,
                                order: 0,
                                name: "行业信息",
                                uri: "/customer/industry",
                                lists: null
                            },
                            {
                                id: 166,
                                parent_id: 334,
                                order: 1,
                                name: "客户部门",
                                uri: "/customer/departmentType",
                                lists: null
                            }
                        ]
                    },
                    {
                        id: 9,
                        parent_id: 0,
                        order: 4,
                        name: "系统管理",
                        uri: "",
                        open: false,
                        lists: [
                            {
                                id: 313,
                                parent_id: 9,
                                order: 0,
                                name: "员工管理",
                                uri: "/rbac/userManagement",
                                lists: [
                                    {
                                        id: 412,
                                        parent_id: 313,
                                        order: 0,
                                        name: "员工管理-子节点",
                                        uri: "/rbac/userManagement",
                                        lists: null
                                    }
                                ]
                            },
                            {
                                id: 320,
                                parent_id: 9,
                                order: 1,
                                name: "部门管理",
                                uri: "/rbac/departmentManagement",
                                lists: null
                            },
                            {
                                id: 23,
                                parent_id: 9,
                                order: 2,
                                name: "角色管理",
                                uri: "/rbac/roleManagement",
                                lists: null
                            },
                            {
                                id: 16,
                                parent_id: 9,
                                order: 3,
                                name: "权限管理",
                                uri: "/rbac/authorityManagement",
                                lists: null
                            },
                            {
                                id: 2,
                                parent_id: 9,
                                order: 4,
                                name: "菜单管理",
                                uri: "/menu/menuManagement",
                                lists: null
                            },
                            {
                                id: 107,
                                parent_id: 9,
                                order: 5,
                                name: "操作日志",
                                uri: "/operation/log",
                                lists: null
                            }
                        ]
                    }
                ]
            },



        }
    },

    mounted() {
        this.getData();
    },
    methods: {
        //api tree part
        isApi(data){
            return !!(data && data.name);
        },

        addDir(parent){
            this.$prompt('请输入目录名称', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                //inputPattern: /[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/,
                //inputErrorMessage: '邮箱格式不正确'
            }).then(({ value }) => {
                if(parent){
                    parent.children.push({
                        label: value,
                        children: [],
                    });
                }else{
                    this.apiList.push({
                        label: value,
                        children: [],
                    });
                }
            }).catch(() => {
                //do nothing
            });
        },

        addApi(parent, node){
            this.cleanSaveForm();
            this.dialogVisible = true;
            this.dialogTitle = 'ADD';
            if(parent){
                let tags = [];
                this.getTags(node,tags);
                this.saveForm.tags = tags.join(',');
            }else{
                this.saveForm.tags = '';
            }
        },

        getTags(node, tags){
            if(node.parent){
                this.getTags(node.parent, tags);
            }
            if(node.data.label){
                tags.push(node.data.label);
            }
        },

        handleNodeClick(data) {
            if(!this.isApi(data)){
                return;
            }
            this.cleanSaveForm();
            this.saveForm = data;
            //TODO http module
            if(!data.messageStruct){
                return;
            }
            let messageStructObj = JSON.parse(data.messageStruct);
            for(var d in messageStructObj) {
                this.messageStructKey = d; // type
                this.messageStructObj = messageStructObj[d]; //属性值gao
                break;
            }


        },

        onSubmit() {
            this.getData();
        },
        currentChange(i) {
            this.pageNum = i;
            this.getData();
        },
        addData() {
            this.cleanSaveForm();
            this.dialogVisible = true;
            this.dialogTitle = 'Add';
        },
        // 获取列表数据
        getData() {
            this.loading = true;
            this.searchParams.pageNum = this.pageNum;
            this.searchParams.pageSize = this.pageSize;
            this.$$api_doc_enterpriseApiList({
                data: this.searchParams,
                fn: json => {
                    this.loading = false;
                    this.total = json.data.total;
                    this.tableData = json.data.records;
                    this.dealWithApiList();
                },
                errFn: () => {
                    this.loading = false;
                }
            })
        },

        getApisByVersionid() {
            this.loading = true;
            this.$$api_doc_getApisByVersionid({
                data: {
                    versionId: '',
                },
                fn: json => {
                    this.loading = false;

                    //TODO
                    this.tableData = json.data.enterpriseOas3Apis;
                    this.enterpriseOas3Components = json.data.enterpriseOas3Components;
                    this.enterpriseOas3Tags = json.data.enterpriseOas3Tags;

                    this.dealWithApiList();
                },
                errFn: () => {
                    this.loading = false;
                }
            })
        },



        dealWithApiList(){
            this.apiList = [];
            for(let i in this.tableData){
                let item = this.tableData[i];
                if(item.tags && item.tags.length>0){
                    let tags = item.tags.split(',');
                    let currentList = this.apiList;
                    for(let j in tags){
                        let tag = tags[j];
                        currentList = this.findNodeAndBuild(currentList, tag);
                    }
                    item.label = item.name;
                    currentList.push(item);
                }else{
                    item.label = item.name;//TODO rename
                    this.apiList.push(item);
                }
            }
        },

        findNodeAndBuild(list, label){
            let node = list.find(n => {
                return n.label === label && !this.isApi(n);
            });
            if(!node){
                node = {
                    label: label,
                    children: [],
                };
                list.push(node);
            }
            return node.children;
        },
        delApiOrDir(data, node){
            if(this.isApi(data)){
                this.delData(data);
            }else{
                if(node.parent.data.children){
                    for(let i in node.parent.data.children){
                        if(node.parent.data.children[i] == data){
                            node.parent.data.children.splice(i, 1);
                            return;
                        }
                    }
                }else if(node.parent.data){
                    for(let i in node.parent.data){
                        if(node.parent.data[i] == data){
                            node.parent.data.splice(i, 1);
                            return;
                        }
                    }
                }
            }
        },
        cleanSaveForm() {
            this.saveForm = {
                name: '',
                tags: '',
                apiVersion: '',
                address: '',
                protocolType: '',
                messageStruct: '',
                remark: '',
            };
        },
        saveData() {
            this.dialogLoading = true;
            this.saveForm.hostId = this.searchParams.hostId;
            this.$refs['saveForm'].validate((valid) => {
                if (valid) {
                    this.$$api_doc_saveEnterpriseApi({
                        data: this.saveForm,
                        fn: json => {
                            this.dialogLoading = false;
                            this.dialogVisible = false;
                            this.getData();
                            this.cleanSaveForm();
                        },
                        errFn: () => {
                            this.dialogLoading = false;
                        }
                    });
                }else {
                    this.dialogLoading = false;
                }
            });
        },
        editData(row) {
            if (!row.id) {
                return;
            }
            this.cleanSaveForm();
            this.$$api_doc_enterpriseApiDetail({
                data: {
                    id: row.id,
                },
                fn: json => {
                    this.saveForm = json.data;
                },
            });
            this.dialogVisible = true;
            this.dialogTitle = 'Edit';
        },
        delData(row) {
            if (!row.id) {
                return;
            }
            this.$confirm('Confirm?', 'warning', {
                confirmButtonText: 'OK',
                cancelButtonText: 'Cancel',
                type: 'warning'
            }).then(() => {
                this.$$api_doc_delEnterpriseApi({
                    data: {
                        id: row.id,
                    },
                    fn: json => {
                        this.$message({
                            message: 'Success',
                            type: 'success'
                        });
                        this.getData();
                    },
                })
            }).catch(() => {
                //do nothing
            });
        },

        clickBtn(row){
            debugger
            console.info(row);

            //TEST

            debugger
            console.info(obj);
        },

        onTreeDataChange(list) {

        },


    }
}
